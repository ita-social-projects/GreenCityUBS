# This is a basic workflow to help you get started with Actions

name: CI/CD GreenCityUBS
# Controls when the action will run.

concurrency: Testing

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

env:
  repository: ubs
  userRepoName: core
  onbootJarName: app.jar
  dockerRepoName: skyere/greencityubs

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: 21

#       - name: Set up Go
#         uses: actions/setup-go@v3
#         with:
#           go-version: 1.18

      - name: Run a multi-line script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          git fetch --unshallow
          mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.projectKey=ita-social-projects-green-ubs -Dsonar.organization=ita-social-projects -Dsonar.host.url=https://sonarcloud.io -Dsonar.binaries=target/classes -Dsonar.dynamicAnalysis=reuseReports -Dsonar.exclusions=**/EncryptionUtil.java -Dsonar.coverage.exclusions=**/config/*,**/entity/*,**/exceptions/*
      
      - name: Test Reporter
        uses: dorny/test-reporter@v1.5.0
        if: success() || failure()
        with:
          name: Tests Report
          path: ${{ env.userRepoName }}/target/surefire-reports/*.xml
          reporter: java-junit
      
      - name: Rename user jar to app
        run: mv $userRepoName/target/*.jar $userRepoName/target/$onbootJarName

      - name: Set outputs
        run: echo "GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.dockerRepoName }}:test-${{ env.GITHUB_SHA_SHORT }}

#       - name: Kubernetes Set Context
#         uses: Azure/k8s-set-context@v3.0
#         with:
#           kubeconfig: ${{ secrets.KUBE_CONFIG }}
      
#       - name: Set up Postgres
#         run: kubectl scale deploy postgres --replicas=1 -n test
      
#       - name: Kubernetes tests
#         run: |
#           cd chart-test
#           go test -v ./...
      
#       - name: Post Set up Postgres
#         if: success() || failure()
#         run: kubectl scale deploy postgres --replicas=0 -n test

        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Deploy ðŸš€
        if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: .
          CLEAN: true
